/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 controller.glb -o ../src/Models/Controller.jsx 
Author: Javi (https://sketchfab.com/JavierGomezGarcia)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/playstation-4-controller-3eb63c5a3197424291dbbc96487328ae
Title: PlayStation 4 controller
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import * as THREE from "three";

export function Model(props) {
  const { nodes, materials } = useGLTF("/controller.glb");
  const ref = useRef();

  useFrame((state) => {
    const t = state.clock.elapsedTime;
    ref.current.rotation.x = 5.5 - Math.sin(t * 0.8) * 0.22;
    ref.current.rotation.y = Math.sin(t * 0.8) * 0.2;
    ref.current.rotation.z = Math.PI / 2 - Math.sin(t * 0.8) * 0.025;
    ref.current.position.y = Math.sin(t * 0.5) / 5;
  });

  return (
    <group {...props} dispose={null}>
      <group ref={ref}>
        <mesh
          geometry={nodes.defaultMaterial.geometry}
          material={
            new THREE.MeshBasicMaterial({
              map: materials.Default.map,
            })
          }
          rotation={[Math.PI / 2, 0, 0]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/controller.glb");
